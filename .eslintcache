[{"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/index.js":"1","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/reportWebVitals.js":"2","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/App.jsx":"3","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Login.jsx":"4","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Dashboard.jsx":"5","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Register.jsx":"6","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Receipt.jsx":"7","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/LandingPage.jsx":"8","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Payment.jsx":"9","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Account.jsx":"10","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/DashNav.jsx":"11","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Train.jsx":"12","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/TrainStatus.jsx":"13","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Passenger.jsx":"14","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Ticket.jsx":"15","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Booking.jsx":"16","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/BookingHistory.jsx":"17","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/SidebarData.jsx":"18"},{"size":500,"mtime":1610689599083,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610689599084,"results":"21","hashOfConfig":"20"},{"size":696,"mtime":1610689598991,"results":"22","hashOfConfig":"20"},{"size":3615,"mtime":1610689599082,"results":"23","hashOfConfig":"20"},{"size":1882,"mtime":1610689599077,"results":"24","hashOfConfig":"20"},{"size":6527,"mtime":1610689599082,"results":"25","hashOfConfig":"20"},{"size":2945,"mtime":1610689599080,"results":"26","hashOfConfig":"20"},{"size":1007,"mtime":1610689599079,"results":"27","hashOfConfig":"20"},{"size":3148,"mtime":1610689599079,"results":"28","hashOfConfig":"20"},{"size":4561,"mtime":1610992054539,"results":"29","hashOfConfig":"20"},{"size":2241,"mtime":1610862993885,"results":"30","hashOfConfig":"20"},{"size":5334,"mtime":1610862993887,"results":"31","hashOfConfig":"20"},{"size":4831,"mtime":1610862993888,"results":"32","hashOfConfig":"20"},{"size":6956,"mtime":1610862993887,"results":"33","hashOfConfig":"20"},{"size":3018,"mtime":1610862993887,"results":"34","hashOfConfig":"20"},{"size":4969,"mtime":1610992827488,"results":"35","hashOfConfig":"20"},{"size":8524,"mtime":1610862993886,"results":"36","hashOfConfig":"20"},{"size":793,"mtime":1610862993888,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ogx1t7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/index.js",[],["85","86"],"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/reportWebVitals.js",[],"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/App.jsx",[],"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Login.jsx",["87"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser , faLock} from \"@fortawesome/free-solid-svg-icons\";\nimport \"../Css/Login.css\"\n\nclass Login extends Component {\n    constructor(){\n        super()\n        this.state={\n          email: \"\",\n          password: \"\",\n          errors:\" \"\n        }\n        this.handleChange=this.handleChange.bind(this)\n        this.handleSubmit=this.handleSubmit.bind(this)\n      }\n\n    handleChange(event){\n        this.setState({\n            [ event.target.name ] : event.target.value\n          })\n      }\n\n    async handleSubmit(event){\n        var form={\n            email: this.state.email,\n            password: this.state.password\n        }\n\n       event.preventDefault();\n       fetch(\"http://127.0.0.1:8000/user/login/\",{\n           method: 'POST',\n           headers : {'Content-type': 'application/json'},\n           body: JSON.stringify(form)\n       })       \n       .then( data =>{ \n           if (data.status != \"200\")\n           {\n               this.setState({\n                   errors: \"Invalid credentials. Please try again.\"\n               })\n           }\n\n           else{\n                this.setState({\n                    errors: \"\"\n                })\n\n                data.json().then(body => {\n                    \n                    console.log(body);\n                    localStorage.setItem(\"token\", body[\"token\"]);\n                    localStorage.setItem(\"email\", body[\"user_data\"][\"email\"]);\n                    localStorage.setItem(\"user_id\", body[\"user_data\"][\"user_id\"]);\n                    localStorage.setItem(\"full_name\", body[\"user_data\"][\"full_name\"]);\n                    localStorage.setItem(\"age\", body[\"user_data\"][\"age\"]);\n                    localStorage.setItem(\"phoneNo\", body[\"user_data\"][\"phoneNo\"]);\n                    localStorage.setItem(\"loggedIn\", true);\n                    \n                    });\n\n                \n                this.props.history.push('/Dashboard');  \n\n            }\n\n           }\n\n       )\n        .catch( error => console.error(error))\n\n    }\n    \n    render(){\n        return (\n                <div className=\"login\">\n                    <div className=\"login-box\">\n                        <h2>Login</h2>\n                        <form autoComplete=\"off\" onSubmit={this.handleSubmit}  >\n\n                        <div className=\"login-textbox\">\n                            <FontAwesomeIcon icon={faUser} />\n                            <input  className=\"l-email\" name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange}  placeholder=\"Email\" required/>\n                        </div>\n                        \n                        <div className=\"login-textbox\">\n                            <FontAwesomeIcon icon={faLock} />\n                            <input className=\"l-password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange}  placeholder=\"Password\" required/>\n                        </div>\n                            \n                        <input className=\"login-submit\" type=\"submit\" value=\"Login\"/><br/>\n\n                        { this.state.errors.length > 0 &&  \n                             <p className='error'>{this.state.errors}</p>}\n                        </form>\n                        <p style={{textAlign: \"center\"}}>Don't have an account? <Link  style={{color:\"white\"}} to=\"/Register\">Register</Link> </p>\n\n\n                    </div>\n                </div>\n\n        )\n    }\n}\n\nexport default Login\n","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Dashboard.jsx",[],"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Register.jsx",["88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React, { Component } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser , faLock ,faPhoneAlt , faEnvelope, faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport '../Css/Register.css'\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validPasswordRegex = RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i);\nconst validPhoneNoRegex = new RegExp(/^(\\d{10}|\\d{12})$/i);\nconst validAgeRegex = new RegExp('^[0-9]+$');\n\nexport class Register extends Component {\n    constructor(){\n        super()\n        this.state={\n          Rname:\"\",\n          username:\"\",\n          email:\"\",\n          phone:\"\",\n          password: \"\",\n          age: \"\",\n          available:\"\",\n          errors:{\n              email:\"\",\n              password:\"\",\n              phone:\"\",\n              age:\"\"\n          }\n        }\n        this.handleChange=this.handleChange.bind(this)\n        this.handleSubmit=this.handleSubmit.bind(this)\n      }\n\n    handleChange(event){\n        event.preventDefault();\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n\n        switch (name) {\n        case 'email': \n            errors.email = \n            validEmailRegex.test(value)\n                ? ''\n                : 'Email is not valid.';\n            break;\n        case 'password': \n            errors.password = \n            validPasswordRegex.test(value)\n                ? ''\n                : 'Password must contain atleast one uppercase letter, lowercase letter, number and special character. Min length 8 characters.';\n            break;\n        case 'phone': \n            errors.phone = \n            validPhoneNoRegex.test(value)\n                ? ''\n                : 'Phone No. not valid.';\n            break;\n        case 'age': \n            errors.age = \n            validAgeRegex.test(value)\n                ? ''\n                : 'Age not valid.';\n            break;\n        \n        default:\n            break;\n        }\n\n        this.setState({errors, [name]: value});\n\n      }\n\n    async handleSubmit(event){\n        var form={\n            full_name: this.state.Rname,\n            username: this.state.username,\n            password:this.state.password,\n            email:this.state.email,\n            phoneNo:this.state.phone,\n            age:this.state.age,\n\n        }\n       event.preventDefault();\n       fetch(\"http://127.0.0.1:8000/user/register/\",{\n           method: 'POST',\n           headers : {'Content-type': 'application/json'},\n           body: JSON.stringify(form)\n       })       \n       .then( data =>{ \n        if (data.status==\"400\")\n        {   \n            this.setState({\n                available: \"Email already exists.\"\n            })\n        }\n\n        else{\n         this.props.history.push('/Login');  \n         console.log(data) }\n\n        }\n\n    )\n     .catch( error => console.error(error))\n\n }\n      \n    render() {\n        return (\n\n            <div className=\"register\">\n                    <div className=\"register-box\">\n                        <h2>Create Account</h2>\n                        <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n\n                        <div className=\"register-textbox\">\n                            <FontAwesomeIcon icon={faUser} />\n                            <input className=\"Rname\" name=\"Rname\" type=\"text\" value={this.state.Rname} onChange={this.handleChange}  placeholder=\"Enter Full Name\" required/>\n                        </div>\n\n                        <div className=\"register-textbox\">\n                            <FontAwesomeIcon icon={faUser} />\n                            <input className=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleChange}  placeholder=\"Enter Username\" required/>\n                        </div>\n\n                        \n                        <div className=\"register-textbox\">\n                            <FontAwesomeIcon icon={faEnvelope} />\n                            <input className=\"email\" name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange}  placeholder=\"Enter Email\" required/>\n                            \n                        </div>\n\n                        <div className=\"register-textbox\">\n                            <FontAwesomeIcon icon={faPhoneAlt} />\n                            <input className=\"phone\" name=\"phone\" type=\"text\" value={this.state.phone} onChange={this.handleChange}  placeholder=\"Enter Phone Number\" required/>\n                            \n                        </div>\n                        \n                        <div className=\"register-textbox\">\n                            <FontAwesomeIcon icon={faCalendarAlt} />\n                            <input className=\"age\" name=\"age\" type=\"int\" value={this.state.age} onChange={this.handleChange}  placeholder=\"Enter Age\" required/>\n                        </div>\n\n                        <div className=\"register-textbox\">\n                            <FontAwesomeIcon icon={faLock} />\n                            <input className=\"password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange}  placeholder=\"Enter Password\" required/>\n                            \n                        </div>\n\n                            \n                        <input className=\"register-submit\" type=\"submit\"  value=\"Register\"/><br/>\n                        \n                        { this.state.errors.email.length > 0 &&  \n                             <p className='error'>{ this.state.errors.email}</p>}\n\n                        { this.state.errors.phone.length > 0 &&  \n                             <p className='error'>{ this.state.errors.phone}</p>}\n                        \n                        { this.state.errors.password.length > 0 &&  \n                             <p className='error'>{ this.state.errors.password}</p>}\n                        \n                        { this.state.errors.age.length > 0 &&  \n                             <p className='error'>{ this.state.errors.age}</p>}\n\n                        { this.state.available.length > 0 &&  \n                             <p className='error'>{this.state.available}</p>}\n\n                        </form>\n                        \n\n\n                    </div>\n                </div>\n            \n        )\n    }\n}\n\nexport default Register ;\n","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Receipt.jsx",["101","102","103","104"],"import React, { Component } from 'react'\nimport randomstring from 'randomstring'\nimport moment from 'moment'\nimport \"../../../Css/Receipt.css\"\n\n\n\nclass Receipt extends Component{\n\n    constructor(){\n        super()\n        this.state={\n\n            txnId : \"\",\n            dateTime : moment().format('MMMM Do YYYY, h:mm:ss a'),\n            amt : 0,\n            data:\"\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.ticketView = this.ticketView.bind(this);\n    }\n\n    /*handleChange(event){\n        this.setState({\n            [ event.target.name ] : event.target.value\n          })\n      }*/\n\n    async ticketView(event){\n       event.preventDefault();\n\n\n        var form={\n            transaction_id: this.state.txnId,\n            token: localStorage.getItem(\"token\")\n        }\n      fetch(\"http://127.0.0.1:8000/booking/get_transaction_tickets/\",{\n        method: 'POST',\n        headers : {'Content-type': 'application/json'},\n        body: JSON.stringify(form)\n    })  \n    .then(response => \n        response.json()\n        \n      )\n    .then( data =>{\n        console.log(data)\n        this.props.history.push({pathname : '/Dashboard/Ticket' , state : data})\n        \n    })\n     \n    \n    }\n\n    async handleSubmit(event){\n        event.preventDefault();\n           \n         this.props.history.push('/Dashboard'); \n     }\n\n    handleChange(event){\n        this.setState({\n            [ event.target.name ] : event.target.value\n          })\n    }\n\n    render() {\n        \n        \n        this.state.data = this.props.history.location.state;\n        this.state.txnId= this.state.data.transaction_id;\n        this.state.amt= this.state.data.price\n        console.log(this.state.data)\n\n        return (\n\n            <div className=\"receipt\">\n                    <div className=\"receipt-box\">\n                        <h2>Your Transaction is Successful !</h2>\n                        <form autoComplete=\"off\">\n\n                        <div className=\"receipt-label\">\n                            <label>Transaction ID : {this.state.txnId}</label>\n                        </div>\n\n                        <div className=\"receipt-label\">\n                            <label>Date : {this.state.dateTime} </label>\n                        </div>\n                        \n                        <div className=\"receipt-label\">\n                            <label>Amount :  ₹ {this.state.amt}</label>\n                        </div>\n\n                        <input className=\"receipt-home\" type=\"submit\" onClick={this.handleSubmit} value=\"Go to Dashboard\"/><br/>\n                        <input className=\"ticket-view\" type=\"submit\" onClick={this.ticketView} value=\"View Booked Tickets\"/><br/>\n                        </form>\n                        \n\n\n                    </div>\n                </div>\n            \n        )\n    }\n}\n\nexport default Receipt;","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/LandingPage.jsx",[],"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Payment.jsx",["105","106"],"import React, { Component } from 'react'\n//import { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faCreditCard, faUserCircle, faLock, faCalendarMinus} from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../Css/Payment.css\"\n\n\nclass Payment extends Component {\n    \n    constructor(){\n        super()\n        this.state={\n            \n            cardNumber : \"\",\n            name : \"\",\n            cvv : \"\",\n            expiry : \"\",\n            data:\"\",\n            price:\" \"\n\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({\n            [ event.target.name ] : event.target.value\n          })\n      }\n\n      async handleSubmit(event){\n        event.preventDefault();\n           \n        let path = '/Dashboard/Receipt';\n        this.props.history.push({pathname : path , state : this.state.data})\n     }\n    \n    \n    \n    \n    render() {\n\n        \n\n        this.state.data = this.props.history.location.state;\n        console.log(this.state.data)\n        this.state.price=\"₹ \" + this.state.data.price\n         \n\n        return (\n            <div  id=\"payment-main\" className=\"payment\">\n                \n                <div className=\"payment-form\">\n                    <h3>Enter Credit/Debit Card Details</h3>\n                    \n                    <form autoComplete=\"off\">\n                        \n                        <div className=\"payment-textbox\">\n                            <FontAwesomeIcon icon = {faUserCircle} />\n                            <input classname = \"p-name\" name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} placeholder=\"Cardholder Name\" required/>\n                        </div>\n\n                        <div className=\"payment-textbox\">\n                            <FontAwesomeIcon icon = {faCreditCard} />\n                            <input classname = \"cardNumber\" name=\"cardNumber\" type=\"text\" value={this.state.cardNumber} onChange={this.handleChange} placeholder=\"Card Number\" required/>\n                        </div>\n\n                        <div className=\"payment-textbox\">\n                            <FontAwesomeIcon icon = {faLock} />\n                            <input classname = \"cvv\" name=\"cvv\" type=\"password\" value={this.state.cvv} onChange={this.handleChange} placeholder=\"CVV/CCV\"  required/>\n                        </div>\n\n                        <div className=\"payment-textbox\">\n                            <FontAwesomeIcon icon = {faCalendarMinus} />\n                            <input classname =\"expiry\" name=\"expiry\" placeholder=\"Date of Expiry\" type=\"text\" value={this.state.expiry} onChange={this.handleChange}  required/>\n                            \n                        </div>\n                        <input className=\"payment-submit\" type=\"submit\" onClick={this.handleSubmit} value={this.state.price} /><br/>\n                    </form>\n\n\n                </div>\n            \n                \n            </div>\n        )\n    }\n}\n\nexport default Payment","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Account.jsx",["107","108","109","110"],"import React, { Component } from 'react'\nimport '../../../Css/Account.css'\n\nclass Account extends Component {\n    constructor(){\n        super();\n        this.state={\n            Aname:\"\",\n            age:\"\",\n            email:\"\",\n            phoneNo:\"\",\n        }\n        \n        this.handleChange = this.handleChange.bind(this)\n        this.updateProfile=this.updateProfile.bind(this)\n\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name] : e.target.value\n            \n        })\n            \n    }\n\n    componentDidMount(){\n        var token= {\n            \"token\" : localStorage.getItem(\"token\")\n        }\n         console.log(token)\n\n        fetch(\"http://127.0.0.1:8000/user/get_user_data/\",{\n            method: 'POST',\n            headers : {'Content-type': 'application/json'},\n            body: JSON.stringify(token)\n        })  \n        .then( data =>{ \n            if (data.status ==\"200\")\n            {\n                \n                data.json().then( body =>{\n                    this.setState({\n                        Aname: body.full_name,\n                        age: body.age,\n                        email: body.email,\n                        phoneNo:body.phoneNo\n                    })\n\n\n                })\n\n            }\n\n        \n        })\n\n        \n\n    }\n\n    updateProfile(event){\n        event.preventDefault();\n        \n        var forms={\n            token: localStorage.getItem(\"token\"),\n            full_name: this.state.Aname,\n            email: this.state.email,\n            phoneNo:this.state.phoneNo,\n            age: this.state.age\n        }\n\n        console.log(forms)\n\n        fetch(\"http://127.0.0.1:8000/user/set_user_data/\",{\n            method: 'POST',\n            headers : {'Content-type': 'application/json'},\n            body: JSON.stringify(forms)\n        })  \n        .then( data =>{ \n            if (data.status ==\"200\")\n            {\n                \n                alert(\"Details updated!\")\n\n            }\n        \n        })\n\n\n\n\n    }\n\n    delProfile(event){\n        event.preventDefault();\n\n        var token= {\n            \"token\" : localStorage.getItem(\"token\")\n        }\n        \n\n        fetch(\"http://127.0.0.1:8000/user/delete_user/\",{\n            method: 'POST',\n            headers : {'Content-type': 'application/json'},\n            body: JSON.stringify(token)\n        })  \n        .then( data =>{ \n            if (data.status ==\"200\")\n            {\n                alert(\"User sucessfully deleted!\")\n                this.props.history.push(\"/Login\")\n            }\n        \n        })\n\n\n\n    }\n\n\n     \n    render() {\n  \n   \n        return (\n            <div id=\"main-content\" >\n            <h3  id=\"account-title\">Account Details</h3>\n\n\n                <div className=\"account\">\n                    \n                    <div className=\"form-area\"> \n    \n                        <form id=\"account-form\">\n\n                            <div >\n                                <label for=\"Aname\">Name:</label>\n                                <input id=\"Aname\" value={this.state.Aname} name=\"Aname\" type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Name\"  />\n                                \n                                <label for=\"Age\">Age:</label>\n                                <input  id=\"Age\" value={this.state.age} name=\"age\" type=\"number\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Age\" />\n                                \n                                <label for=\"email\">Email:</label>\n                                <input id=\"email\" value={this.state.email}  name=\"email\" type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Email\" />\n                                \n                                <label for=\"phoneNo\">Phone:</label>\n                                <input id=\"phone\" value={this.state.phoneNo} name=\"phoneNo\" type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Phone Number\"  />\n                            </div>\n                            \n                            <button  id=\"account-button\" type=\"button\" onClick={this.updateProfile} id=\"submit\" name=\"submit\" className=\"submit_booking mt-4 pull-right\">Update</button>\n                            <button  type=\"button\" onClick={this.delProfile}  name=\"submit\" className=\"account-butto mt-3 pull-right\">Delete Account</button>\n\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Account\n","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/DashNav.jsx",[],"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Train.jsx",["111","112","113","114","115","116"],"import React, { Component } from 'react'\nimport '../../../Css/Train.css'\n\n\nclass Train extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            Train1 : [],\n            avail : [],\n            res : [],\n            seats:'',\n            \n\n        }\n        this.changeRoute=this.changeRoute.bind(this)\n    }\n\n   \n\n\n     changeRoute(index){\n\n        var form={\n            train_id: this.state.avail[index].train_id,\n            token: localStorage.getItem(\"token\"),\n            seats: this.state.seats\n        }\n\n        localStorage.setItem(\"train_id\",form.train_id)\n        console.log(localStorage.getItem(\"train_id\"))\n\n       fetch(\"http://127.0.0.1:8000/booking/lock/\",{\n           method: 'POST',\n           headers : {'Content-type': 'application/json'},\n           body: JSON.stringify(form)\n       })       \n       .then( data =>{ \n           if (data.status==\"201\"){\n\n                data.json().then(body => {\n                    \n                    console.log(body);\n                    \n                    });\n\n                    console.log(form)\n\n\n                let path = `/Dashboard/Passenger`;\n                this.props.history.push({pathname : path , state : this.state.seats})\n\n\n            }\n\n        })\n        .catch( error => console.error(error))\n       \n    }\n    \n    \n    render() {\n\n        this.state.Train1 = this.props.history.location.state;\n        this.state.seats= this.state.Train1.seats\n        console.log(this.state.seats)\n\n        \n\n        var obj = this.state.Train1.avail_train\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            var val = obj[key];\n            this.state.avail.push(val)\n          }\n        }\n\n\n        var obj = this.state.Train1.reserved_train\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            var val = obj[key];\n            this.state.res.push(val)\n          }\n        }\n\n     \n\n       \n\n        return (\n            <div id=\"content\" >\n                <div id=\"train-deets\">\n                <h4> Available Trains: </h4>\n\n                    <table className=\"table table-bordered table-xs-responsive table-hover\">\n                        <thead className=\"thead-dark\">  \n                        <tr>\n                            <th>Train No</th>\n                            <th>Train Name</th>\n                            <th>Time of Dep.</th>\n                            <th>Time of Arrival</th>\n                            <th>Minimum Price</th>\n                            <th>Available Seats </th>\n                            <th> Booking</th>\n\n\n                        </tr>\n                        </thead>\n                        <tbody>\n                        \n                        {\n                             this.state.avail.map((item,index) => (\n                                <tr key={index}   >\n                                    <td>{item.train_id}</td>\n                                    <td>{item.train_name}</td>\n                                    <td>{item.departure.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                                    <td>{item.arrival.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                                    <td> ₹ {item.price}</td>\n                                    <td>{item.available_seats}</td> \n                                    <td><button  onClick={() => { this.changeRoute(index)}}  className=\"btn btn-primary pull-right\">Book</button></td>\n\n\n                                </tr>\n                            ))\n                        }\n                            \n                        </tbody>\n                    </table>\n                </div>\n\n                <div id=\"train-deets\">\n                <h4> Reserved Trains: </h4>\n\n                    <table className=\"table table-bordered table-xs-responsive table-hover\">\n                        <thead className=\"thead-dark\">  \n                        <tr>\n                            <th>Train No</th>\n                            <th>Train Name</th>\n                            <th>Time of Dep.</th>\n                            <th>Time of Arrival</th>\n                            <th>Price</th>\n                            <th>Waiting List </th>\n                            <th> Booking</th>\n\n\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                             this.state.res.map((item) => (\n                                <tr>\n                                <td>{item.train_id}</td>\n                               <td>{item.train_name}</td>\n                               <td>{item.departure.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                               <td>{item.arrival.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                               <td> ₹ {item.price}</td>\n                               <td>WL - {item.reservation_queue}</td>\n                               <td><button disabled className=\"btn btn-primary pull-right\">Book</button></td>\n\n\n                           </tr>\n                            ))\n                        }\n                            \n                        </tbody>\n                    </table>\n                </div>\n                </div>\n        )\n    }\n}\n\n    \n\nexport default Train\n","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/TrainStatus.jsx",["117","118"],"import React, { Component } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrain } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../Css/TrainStatus.css\"\n\nclass TrainStatus extends Component {\n    \n    constructor(){\n        super()\n        this.state={\n            \n            trainNo : \"\",\n            trainName : \"\",\n            arrival : \"\",\n            departure : \"\",\n            total_seats:\"\",\n            remaining_seats:\"\",\n            show : false,\n            errors:\" \"\n\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.state = {\n          show: false\n        };\n      }\n\n    showTable = (event) => {\n\n        var id = this.state.trainNo\n\n       event.preventDefault();\n       fetch(`http://127.0.0.1:8000/booking/gettrain/${id}`) \n           .then( data =>{ \n                console.log(data.status)\n                if (data.status != \"200\")\n                {\n                    this.setState({\n                        errors: \"Train does not exist. Please try again.\"\n                    })\n                }\n\n                else{\n\n                        this.setState({\n                            errors: \"\"\n                        })\n\n                        data.json().then(body => {\n                            this.setState({\n                                trainName: body.train_name,\n                                arrival: body.arrival_time,\n                                departure: body.departure_time,\n                                total_seats: body.total_seats,\n                                remaining_seats: body.remaining_seats,\n                                \n                            })\n                        })\n                        \n                        \n                        this.setState({\n                            show: true\n                        });\n                    \n\n                    }\n\n            })\n            .catch( error => console.error(error))\n\n    }\n\n    \n\n    \n\n    handleChange(event){\n        this.setState({\n            [ event.target.name ] : event.target.value,\n            show:false\n          })\n\n\n      }\n\n      async handleSubmit(event){\n        event.preventDefault();\n           \n        this.props.history.push('/Dashboard/Receipt');  \n     }\n    \n    \n    \n    \n    render() {\n        return (\n\n            <div className=\"trainstatus\">\n\n                <div className=\"trainstat\">\n\n                    <h3 style={{marginTop:\"10px\",marginBottom:\"10px\"}}>Train Status</h3>\n\n                    <div  className = \"status-textbox\">\n\n                    <FontAwesomeIcon icon = {faTrain} />\n                    <input className= \"TrNo\" name=\"trainNo\" type=\"text\" value={this.state.trainNo} onChange={this.handleChange} placeholder=\"Enter Train Number\" required>\n\n                    </input>\n\n                    \n\n                    </div>\n\n                    <button className = \"status-button\" onClick={this.showTable}>Check Status</button>\n                        \n\n                    <div className = \"status-table\">\n\n                    { this.state.errors.length > 0 &&  \n                             <p className='error'>{this.state.errors}</p>}   \n                         \n                    {\n                        this.state.show &&\n                        <table className=\"table  table-bordered \">\n                            <thead className=\"thead-dark\" >\n                                 <tr>\n                                    <th>Train No</th>\n                                    <th>Train Name</th>\n                                    <th>Arrival Time</th>\n                                    <th>Destination Time</th>\n                                    <th>Total Seats</th>\n                                    <th> Remaining Seats</th>\n                                </tr>\n                            </thead>\n                             <tbody>\n                                <tr>\n                                    <td>{this.state.trainNo}</td>\n                                    <td>{this.state.trainName}</td>\n                                    <td>{this.state.arrival.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                                    <td>{this.state.departure.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                                    <td>{this.state.total_seats}</td>\n                                    <td>{this.state.remaining_seats}</td>\n\n                                </tr>\n\n                            </tbody>\n                         </table>\n                    }\n\n                    </div>\n\n                </div>\n\n            </div>\n\n\n            \n        )\n    }\n}\n\nexport default TrainStatus","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Passenger.jsx",["119","120","121","122","123","124","125","126"],"import React, { Component } from 'react'\nimport '../../../Css/Passenger.css'\n\nclass Passenger extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n         \n        pax : [{\n                name:\"\",\n                age: 0,\n                gender : \"\",\n                berth : \"\"\n            }] ,\n            seats:\"\",\n            error:\"\"\n\n        }\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.nameChange = this.nameChange.bind(this);\n        this.ageChange = this.ageChange.bind(this);\n        this.sexChange = this.sexChange.bind(this);\n        this.berthChange = this.berthChange.bind(this);\n    }\n\n    nameChange(event,index){\n        this.state.pax[index].name = event.target.value\n        this.setState({\n            pax : this.state.pax\n        })\n        \n    }\n\n    berthChange(event,index){\n        this.state.pax[index].berth = event.target.value\n        this.setState({\n            pax : this.state.pax\n        })\n        \n    }\n\n    ageChange(event,index){\n        this.state.pax[index].age = event.target.value\n        this.setState({\n            pax : this.state.pax\n        })\n\n    }\n       \n\n    sexChange(event,index){\n        this.state.pax[index].gender = event.target.value\n        this.setState({\n            pax : this.state.pax\n        })\n        \n    }\n\n    addPax = e => {\n        e.preventDefault()\n        if (this.state.pax.length < this.state.seats ) {\n            \n            this.setState({pax : [...this.state.pax,{}]})\n        }\n    }\n\n   \n\n    async handleSubmit(event){\n        event.preventDefault();\n\n        console.log(this.state.pax)\n        console.log(this.state.seats)\n\n        if (this.state.pax.length == this.state.seats ) {\n\n            this.setState({\n                error:\"\"\n            })\n\n                console.log(this.state.pax)\n\n                var form={\n                    boarding: localStorage.getItem(\"boarding\") ,\n                    destination: localStorage.getItem(\"destination\") ,\n                    token:localStorage.getItem(\"token\"),\n                    passenger_list: this.state.pax,\n                    train_id: localStorage.getItem(\"train_id\")\n            }\n\n            console.log(form)\n\n            fetch(\"http://127.0.0.1:8000/booking/bookticket/\",{\n                method: 'POST',\n                headers : {'Content-type': 'application/json'},\n                body: JSON.stringify(form)\n            })  \n\n            .then( data =>{ \n                if (data.status==\"201\")\n                {\n                     data.json().then(body => {\n                         \n                         console.log(body);\n\n                         let path = `/Dashboard/Payment`;\n                         this.props.history.push({pathname : path , state : body})\n                    })\n                }\n     \n            })\n             \n            .catch( error => console.error(error))\n     \n    \n        }\n\n        else{\n            this.setState({\n                error:`Enter ${this.state.seats} passenger details!`\n            })\n        }\n    }\n    \n\n\n    render() {\n\n        this.state.seats = this.props.history.location.state;\n\n        return (\n            <div id=\"content\" style={{marginTop:\"90px\"}} >\n                <div id=\"train-deets\">\n                    <h4 style={{float:\"left\",fontWeight:\"bold\"}}> Passenger Details   </h4> \n                    <h4>(Seats reserved for 15 minutes)</h4>\n                    <button  onClick={(e) => this.addPax(e)} className=\"btn  mb-4 btn-primary pull-right\" style={{float:\"right\",width:\"80px\"}}>Add</button>\n                </div>\n\n                <form onSubmit={this.handleSubmit}>\n                    <table className=\"table table-bordered table-xs-responsive\">\n                        <thead className=\"thead-dark\">  \n                        <tr>\n                            <th>Name</th>\n                            <th>Age</th>\n                            <th>Sex</th>\n                            <th>Berth Preference</th>\n\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                             this.state.pax.map((person,index) => (\n                                <tr key={index}>\n                                    \n                                    <td><input className = \"Name\" name=\"name\" type=\"text\" value={person.name} onChange={e => {this.nameChange(e,index)}} placeholder=\"Name\" required/></td>\n                                    \n                                    <td><input className =\"Age\" name=\"age\" placeholder=\"Age\" type=\"number\" min=\"0\" max=\"100\" value={person.age} onChange={e => {this.ageChange(e,index)}}  required/></td>\n                                    \n                                    <td>\n                                    <select className=\"Sex\" name=\"sex\" onChange={e => {this.sexChange(e,index)}} value={person.gender} required>\n                                    <option hidden value=\" \">Sex</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Other\">Others</option>\n                                    </select>\n                                    </td>\n                                    \n                                    <td>\n                                    <select className=\"Berth\" name=\"berth\" onChange={e => {this.berthChange(e,index)}} value={person.berth} required>\n                                    <option hidden value=\" \">Berth</option>\n                                    <option value=\"Lower Berth\">Lower Berth</option>\n                                    <option value=\"Middle Berth\">Middle Berth</option>\n                                    <option value=\"Upper Berth\">Upper Berth</option>\n                                    <option value=\"Side Lower\">Side Lower</option>\n                                    <option value=\"Side Upper\">Side Upper</option>\n                                    </select>\n                                    </td>\n                                    \n\n\n                                </tr>\n                            ))\n                        }\n                            \n                        </tbody>\n                    </table>\n\n                \n                    \n                     <div className=\"text-center\">\n\n                        <input style={{margin:\"0 auto\" ,width:\"350px\"}} className=\"pax-submit\" className=\"btn mt-4 btn-primary\" type=\"submit\"  value=\"Make Payment\"/>\n                        { this.state.error.length > 0 &&  \n                             <p  style={{marginTop:\"20px\"}}className='error'>{this.state.error}</p>}\n                        \n                    </div>\n\n                    </form>\n                </div>\n                \n        )\n    }\n}\n\n    \n\nexport default Passenger\n\n","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Ticket.jsx",["127"],"import React, { Component } from 'react'\nimport \"../../../Css/Ticket.css\"\n\nexport class Ticket extends Component {\n    constructor(){\n        super();\n        this.state={\n            txnId: [],\n            txns : []\n        };\n\n    this.handleSubmit=this.handleSubmit.bind(this)\n    }\n\n\n    handleSubmit(){\n        this.props.history.push('/Dashboard')\n    }\n\n\n    render() {\n\n        this.state.txnId = this.props.history.location.state;\n        var obj = this.state.txnId.transaction_tickets\n        console.log(obj)\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n              var val = obj[key];\n              this.state.txns.push(val)\n            }\n          }\n\n        console.log(this.state.txns)\n\n        return (\n            <div id=\"content\">\n\n                <div id=\"ticket-details\">\n                <table className=\"table table-bordered table-xs-responsive table-hover\">\n                        <thead className=\"thead-dark\">  \n                        <tr>\n                            <th>Ticket Number</th>\n                            <th>Train Name</th>\n                            <th>From</th>\n                            <th>Departure Time</th>\n                            <th>To</th>\n                            <th>Arrival Time</th>\n                            <th>Passenger Name</th>\n                            <th>Age</th>\n                            <th>Sex </th>\n                            <th>Seat</th>\n                            <th>Berth</th>\n\n\n\n                        </tr>\n                        </thead>\n                        <tbody>\n                        \n                        {\n                             this.state.txns.map((item,index) => (\n                                <tr key={index}   >\n                                    <td>{item.ticket_number}</td>\n                                    <td>{item.train.train_name}</td>\n                                    <td>{item.boarding}</td>\n                                    <td>{item.train.arrival_time.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                                    <td>{item.destination}</td>\n                                    <td>{item.train.departure_time.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n                                    <td>{item.passenger.name}</td>\n                                    <td>{item.passenger.age}</td> \n                                    <td>{item.passenger.gender}</td> \n                                    <td>{item.seat_no}</td>\n                                    <td>{item.passenger.berth}</td>\n\n\n                                </tr>\n                            ))\n                        }\n                            \n                        </tbody>\n                    </table>\n                </div>\n\n                <input className=\"ticket-home\" type=\"submit\" onClick={this.handleSubmit} value=\"Go to Dashboard\"/><br/>\n\n                \n                </div>\n                \n            \n        )\n    }\n}\n\nexport default Ticket\n","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/Booking.jsx",["128"],"/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/Pages/BookingHistory.jsx",["129","130"],"import React, { Component } from 'react'\nimport {  Modal , Button } from 'react-bootstrap'\n\n\nclass BookingHistory extends Component{\n\n    constructor(){\n        super()\n\n        this.state ={\n            trans :[],\n            details:[{}],\n            len : 0,\n            show:false,\n            errors:\"\"\n        }\n\n        this.handleCancle=this.handleCancle.bind(this)\n        this.onHide=this.onHide.bind(this)\n        \n\n    }\n\n    handleCancle(index){\n        var form={\n            transaction_id: this.state.trans[index][0].data.transaction_id,\n            token: localStorage.getItem(\"token\"),\n        }\n\n        console.log(form)\n\n        fetch(\"http://127.0.0.1:8000/booking/cancel_ticket_by_transaction/\",{\n        method: 'POST',\n        headers : {'Content-type': 'application/json'},\n        body: JSON.stringify(form)\n        })  \n        \n        .then( data =>{ \n         \n                this.setState({\n                    show:true\n                })\n            \n\n        })\n        .catch( error => console.error(error))\n\n }\n    componentDidMount(){\n        var token= {\n            \"token\" : localStorage.getItem(\"token\")\n        }\n        \n\n        fetch(\"http://127.0.0.1:8000/user/user_bookings_history/\",{\n            method: 'POST',\n            headers : {'Content-type': 'application/json'},\n            body: JSON.stringify(token)\n        })  \n        .then( data =>{ \n            if (data.status !=\"200\")\n            {\n                this.setState({\n                    errors: \"No previous bookings!\"\n                })\n            }\n\n\n            else if(data.status==\"200\") {\n                data.json().then( body =>{\n                    this.setState({\n                        details: body,\n                        errors:\"\"\n                    })\n                })\n\n            }\n        \n        })\n\n    }\n\n\n    onHide(){\n        this.setState({\n            show:false\n        })\n\n        window.location.reload();\n\n\n    }\n\n\n\n    \n    render(){\n\n        // console.log(\"debugg:\"+ this.state.details.bookings)\n        var obj = this.state.details.bookings\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {           \n                // console.log(key, obj[key]);\n                var val = obj[key];\n                \n                var temp = []\n\n                for (var k in val){\n                    if(val.hasOwnProperty(k)){\n                        temp.push(val[k])\n                    }\n                }\n\n                this.state.trans.push(temp)\n\n                // val.map((item,index) =>(\n                //     console.log(item)\n\n                // ))\n            }\n        }\n        //console.log(this.state.trans)\n\n       \n\n        return(\n\n                    <div id=\"booking-history\" className=\"booking-history\" style={{paddingTop:\"80px\", margin: \"0 60px\"}}>\n\n                        <p style={{marginBottom:\"0px\", fontSize:\"40px\"}}>Booking History</p>\n\n                        { this.state.errors.length > 0 &&  \n                             <p style={{marginTop:\"20px\", marginLeft:\"4px\",color:\"red\"}}>{this.state.errors}</p>}\n\n\n                        \n                        {\n                            \n                             this.state.trans.map((item,index) => (\n\n                            <div key={index} className=\"history-table\">\n                            <p style={{marginBottom:\"0px\", marginLeft:\"-40px\", fontSize:\"20px\"}}> {index + 1}. </p>    \n                            <div className=\"ticket\" style={{paddingTop:\"0px\"}}>\n                            <table className=\"table table-bordered table-xs-responsive\">\n                            <tbody>\n                                <tr>\n                                    {/* {console.log(item)}\n                                    {console.log(index)} */}\n                                      \n                                    <td>Transcation ID : {item[0].data.transaction_id}</td>\n                                    <td>Train Name : {item[0].data.train.train_name}</td>\n                                </tr>\n                                {/* <tr>\n                                    <td>Train Number : {} </td>   \n                                    <td>Train Name : {item[0].data.train.train_name}</td>\n                                </tr> */}\n                                <tr>\n                                    <td>From : {item[0].data.boarding} </td>\n                                    <td>To : {item[0].data.destination}</td>\n                                </tr>\n                                <tr>\n                                    <td>Arrival : {item[0].data.train.arrival_time.replace(\"T\",\" \").replace(\"Z\",\" \")}</td>\n\n                                    <td>Departure : {item[0].data.train.departure_time.replace(\"T\",\" \").replace(\"Z\",\" \")} </td>   \n                                </tr>\n                            </tbody>\n                                \n                            </table>\n\n                            </div>\n\n                            <table className=\"table table-bordered table-xs-responsive\">\n                                        <thead className=\"thead-dark\">\n                                            <tr>\n                                                <th>Ticket ID</th>\n                                                <th>Name</th>\n                                                <th>Age</th>\n                                                <th>Sex</th>\n                                                <th>Seat No</th>\n                                                <th>Berth</th>\n                                            </tr>\n                                        </thead>\n\n\n\n                                        <tbody>\n\n                                            \n                                            {    item.map((a,i) => (\n                                               \n                                                 \n                                                <tr key={i}>\n\n                                                    \n\n                                                    \n                                                    <td>{a.data.ticket_number}</td>\n                                                    <td>{a.data.passenger.name}</td>\n                                                    <td>{a.data.passenger.age}</td>\n                                                    <td>{a.data.passenger.gender}</td>\n                                                    <td>{a.data.seat_no}</td>\n                                                    <td>{a.data.passenger.berth}</td>\n                                                </tr>\n\n                                                    \n                                            ))    \n                                            }\n                                        </tbody>\n                            </table>\n\n                        <div style={{textAlign:\"center\"}}>  \n\n                            <button className = \" cancel-button\" onClick={() => { this.handleCancle(index)}} >Cancel Booking</button>\n\n                        <hr  style={{\n                            margin: \"30px -30px\",\n                            color: '#000000',\n                            backgroundColor: '#000000',\n                            height: .4,\n                            opacity: 0.3,\n                            borderColor : '#000000'\n                        }}/>\n\n                        </div>\n\n\n\n                        </div>\n\n\n                        \n                        \n\n\n                        )) }\n\n\n\n                <Modal style={{height:\"400px\"}}\n                  show={this.state.show}\n                  dialogClassName=\"modal-90w\"\n                  aria-labelledby=\"example-custom-modal-styling-title\"                  \n                  centered\n                >\n                  \n                    <Modal.Body style={{margin: '10px'}}>\n                        <p style={{textAlign:\"center\"}}>{localStorage.getItem(\"full_name\") }, your booking has been sucessfully cancelled! </p>\n                        \n                    </Modal.Body>\n                    <Modal.Footer>\n    \n                        \n                            <Button  variant=\"primary\" onClick={this.onHide}>Ok</Button>\n\n                    </Modal.Footer>\n\n                </Modal>\n                        \n\n                    </div>\n\n\n\n             \n        )\n    }\n}\n\nexport default BookingHistory","/Users/gmc/Desktop/git/ASDL-FrontEnd/src/Components/Jsx/Dashboard/SidebarData.jsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":38,"column":28,"nodeType":"137","messageId":"138","endLine":38,"endColumn":30},{"ruleId":"139","severity":1,"message":"140","line":6,"column":42,"nodeType":"141","messageId":"142","endLine":6,"endColumn":43,"suggestions":"143"},{"ruleId":"139","severity":1,"message":"144","line":6,"column":46,"nodeType":"141","messageId":"142","endLine":6,"endColumn":47,"suggestions":"145"},{"ruleId":"139","severity":1,"message":"146","line":6,"column":54,"nodeType":"141","messageId":"142","endLine":6,"endColumn":55,"suggestions":"147"},{"ruleId":"139","severity":1,"message":"140","line":6,"column":67,"nodeType":"141","messageId":"142","endLine":6,"endColumn":68,"suggestions":"148"},{"ruleId":"139","severity":1,"message":"144","line":6,"column":71,"nodeType":"141","messageId":"142","endLine":6,"endColumn":72,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"146","line":6,"column":79,"nodeType":"141","messageId":"142","endLine":6,"endColumn":80,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"146","line":6,"column":88,"nodeType":"141","messageId":"142","endLine":6,"endColumn":89,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"146","line":6,"column":92,"nodeType":"141","messageId":"142","endLine":6,"endColumn":93,"suggestions":"152"},{"ruleId":"139","severity":1,"message":"144","line":6,"column":108,"nodeType":"141","messageId":"142","endLine":6,"endColumn":109,"suggestions":"153"},{"ruleId":"139","severity":1,"message":"146","line":6,"column":116,"nodeType":"141","messageId":"142","endLine":6,"endColumn":117,"suggestions":"154"},{"ruleId":"139","severity":1,"message":"144","line":6,"column":133,"nodeType":"141","messageId":"142","endLine":6,"endColumn":134,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"146","line":6,"column":141,"nodeType":"141","messageId":"142","endLine":6,"endColumn":142,"suggestions":"156"},{"ruleId":"135","severity":1,"message":"157","line":89,"column":24,"nodeType":"137","messageId":"138","endLine":89,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":72,"column":9,"nodeType":"164","endLine":72,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":73,"column":9,"nodeType":"164","endLine":73,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":74,"column":9,"nodeType":"164","endLine":74,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":47,"column":9,"nodeType":"164","endLine":47,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":49,"column":9,"nodeType":"164","endLine":49,"endColumn":19},{"ruleId":"135","severity":1,"message":"157","line":39,"column":29,"nodeType":"137","messageId":"138","endLine":39,"endColumn":31},{"ruleId":"135","severity":1,"message":"157","line":81,"column":29,"nodeType":"137","messageId":"138","endLine":81,"endColumn":31},{"ruleId":"135","severity":1,"message":"157","line":109,"column":29,"nodeType":"137","messageId":"138","endLine":109,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":151,"column":101,"nodeType":"167","endLine":151,"endColumn":112},{"ruleId":"135","severity":1,"message":"157","line":39,"column":27,"nodeType":"137","messageId":"138","endLine":39,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":64,"column":9,"nodeType":"164","endLine":64,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":65,"column":9,"nodeType":"164","endLine":65,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":79,"column":13,"nodeType":"160","messageId":"170","endLine":79,"endColumn":16},{"ruleId":"168","severity":1,"message":"171","line":80,"column":18,"nodeType":"160","messageId":"170","endLine":80,"endColumn":21},{"ruleId":"168","severity":1,"message":"172","line":82,"column":17,"nodeType":"160","messageId":"170","endLine":82,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":28,"column":9,"nodeType":"173","endLine":28,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":41,"column":33,"nodeType":"137","messageId":"138","endLine":41,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":27,"column":9,"nodeType":"164","endLine":27,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":35,"column":9,"nodeType":"164","endLine":35,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":43,"column":9,"nodeType":"164","endLine":43,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":52,"column":9,"nodeType":"164","endLine":52,"endColumn":30},{"ruleId":"135","severity":1,"message":"157","line":75,"column":35,"nodeType":"137","messageId":"138","endLine":75,"endColumn":37},{"ruleId":"135","severity":1,"message":"157","line":100,"column":32,"nodeType":"137","messageId":"138","endLine":100,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":129,"column":9,"nodeType":"164","endLine":129,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":192,"column":96,"nodeType":"167","endLine":192,"endColumn":128},{"ruleId":"162","severity":1,"message":"163","line":23,"column":9,"nodeType":"164","endLine":23,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":55,"column":25,"nodeType":"137","messageId":"138","endLine":55,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":61,"column":29,"nodeType":"137","messageId":"138","endLine":61,"endColumn":31},{"ruleId":"135","severity":1,"message":"157","line":69,"column":32,"nodeType":"137","messageId":"138","endLine":69,"endColumn":34},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["176","177"],"Unnecessary escape character: \\..",["178","179"],"Unnecessary escape character: \\\".",["180","181"],["182","183"],["184","185"],["186","187"],["188","189"],["190","191"],["192","193"],["194","195"],["196","197"],["198","199"],"Expected '===' and instead saw '=='.","no-unused-vars","'randomstring' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-redeclare","'obj' is already defined.","redeclared","'key' is already defined.","'val' is already defined.","ThisExpression","no-global-assign","no-unsafe-negation",{"messageId":"200","fix":"201","desc":"202"},{"messageId":"203","fix":"204","desc":"205"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"203","fix":"207","desc":"205"},{"messageId":"200","fix":"208","desc":"202"},{"messageId":"203","fix":"209","desc":"205"},{"messageId":"200","fix":"210","desc":"202"},{"messageId":"203","fix":"211","desc":"205"},{"messageId":"200","fix":"212","desc":"202"},{"messageId":"203","fix":"213","desc":"205"},{"messageId":"200","fix":"214","desc":"202"},{"messageId":"203","fix":"215","desc":"205"},{"messageId":"200","fix":"216","desc":"202"},{"messageId":"203","fix":"217","desc":"205"},{"messageId":"200","fix":"218","desc":"202"},{"messageId":"203","fix":"219","desc":"205"},{"messageId":"200","fix":"220","desc":"202"},{"messageId":"203","fix":"221","desc":"205"},{"messageId":"200","fix":"222","desc":"202"},{"messageId":"203","fix":"223","desc":"205"},{"messageId":"200","fix":"224","desc":"202"},{"messageId":"203","fix":"225","desc":"205"},{"messageId":"200","fix":"226","desc":"202"},{"messageId":"203","fix":"227","desc":"205"},"removeEscape",{"range":"228","text":"229"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"230","text":"231"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"232","text":"229"},{"range":"233","text":"231"},{"range":"234","text":"229"},{"range":"235","text":"231"},{"range":"236","text":"229"},{"range":"237","text":"231"},{"range":"238","text":"229"},{"range":"239","text":"231"},{"range":"240","text":"229"},{"range":"241","text":"231"},{"range":"242","text":"229"},{"range":"243","text":"231"},{"range":"244","text":"229"},{"range":"245","text":"231"},{"range":"246","text":"229"},{"range":"247","text":"231"},{"range":"248","text":"229"},{"range":"249","text":"231"},{"range":"250","text":"229"},{"range":"251","text":"231"},{"range":"252","text":"229"},{"range":"253","text":"231"},[287,288],"",[287,287],"\\",[291,292],[291,291],[299,300],[299,299],[312,313],[312,312],[316,317],[316,316],[324,325],[324,324],[333,334],[333,333],[337,338],[337,337],[353,354],[353,353],[361,362],[361,361],[378,379],[378,378],[386,387],[386,386]]